# register machine style addition

# Output:
# initial value of x: 3
# (+)(+)(+)(+)(+)(+)(+)
# final value of x: 10

# Program:

begin
  int x = 3 ;
  int y = 7 ;
  print "initial value of x: " ;
  println x ;
  while y > 0 do
    print "(+)" ;
    x = x + 1 ;
    y = y - 1
  done ;
  println "" ;
  print "final value of x: " ;
  println x
end

-- Compiling...
-- Printing Assembly...
rmStyleAdd.s contents are:
===========================================================
0	.data
1	
2	msg_0:
3		.word 20
4		.ascii	"initial value of x: "
5	msg_1:
6		.word 3
7		.ascii	"(+)"
8	msg_2:
9		.word 0
10		.ascii	""
11	msg_3:
12		.word 18
13		.ascii	"final value of x: "
14	msg_4:
15		.word 5
16		.ascii	"%.*s\0"
17	msg_5:
18		.word 3
19		.ascii	"%d\0"
20	msg_6:
21		.word 1
22		.ascii	"\0"
23	msg_7:
24		.word 82
25		.ascii	"OverflowError: the result is too small/large to store in a 4-byte signed-integer.\n"
26	
27	.text
28	
29	.global main
30	main:
31		PUSH {lr}
32		SUB sp, sp, #8
33		LDR r4, =3
34		STR r4, [sp, #4]
35		LDR r4, =7
36		STR r4, [sp]
37		LDR r4, =msg_0
38		MOV r0, r4
39		BL p_print_string
40		LDR r4, [sp, #4]
41		MOV r0, r4
42		BL p_print_int
43		BL p_print_ln
44		B L0
45	L1:
46		LDR r4, =msg_1
47		MOV r0, r4
48		BL p_print_string
49		LDR r4, [sp, #4]
50		LDR r5, =1
51		ADDS r4, r4, r5
52		BLVS p_throw_overflow_error
53		STR r4, [sp, #4]
54		LDR r4, [sp]
55		LDR r5, =1
56		SUBS r4, r4, r5
57		BLVS p_throw_overflow_error
58		STR r4, [sp]
59	L0:
60		LDR r4, [sp]
61		LDR r5, =0
62		CMP r4, r5
63		MOVGT r4, #1
64		MOVLE r4, #0
65		CMP r4, #1
66		BEQ L1
67		LDR r4, =msg_2
68		MOV r0, r4
69		BL p_print_string
70		BL p_print_ln
71		LDR r4, =msg_3
72		MOV r0, r4
73		BL p_print_string
74		LDR r4, [sp, #4]
75		MOV r0, r4
76		BL p_print_int
77		BL p_print_ln
78		ADD sp, sp, #8
79		LDR r0, =0
80		POP {pc}
81		.ltorg
82	p_print_string:
83		PUSH {lr}
84		LDR r1, [r0]
85		ADD r2, r0, #4
86		LDR r0, =msg_4
87		ADD r0, r0, #4
88		BL printf
89		MOV r0, #0
90		BL fflush
91		POP {pc}
92	p_print_int:
93		PUSH {lr}
94		MOV r1, r0
95		LDR r0, =msg_5
96		ADD r0, r0, #4
97		BL printf
98		MOV r0, #0
99		BL fflush
100		POP {pc}
101	p_print_ln:
102		PUSH {lr}
103		LDR r0, =msg_6
104		ADD r0, r0, #4
105		BL puts
106		MOV r0, #0
107		BL fflush
108		POP {pc}
109	p_throw_overflow_error:
110		LDR r0, =msg_7
111		BL p_throw_runtime_error
112	p_throw_runtime_error:
113		BL p_print_string
114		MOV r0, #-1
115		BL exit
116	
===========================================================
-- Assembling and Linking...
-- Executing...
===========================================================
initial value of x: 3
(+)(+)(+)(+)(+)(+)(+)
final value of x: 10
===========================================================
The exit code is 0.
-- Finished
