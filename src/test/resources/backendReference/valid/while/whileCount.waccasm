-- Compiling...
-- Printing Assembly...
whileCount.s contents are:
===========================================================
0	.data
1	
2	msg_0:
3		.word 20
4		.ascii	"Can you count to 10?"
5	msg_1:
6		.word 5
7		.ascii	"%.*s\0"
8	msg_2:
9		.word 1
10		.ascii	"\0"
11	msg_3:
12		.word 3
13		.ascii	"%d\0"
14	msg_4:
15		.word 82
16		.ascii	"OverflowError: the result is too small/large to store in a 4-byte signed-integer.\n"
17	
18	.text
19	
20	.global main
21	main:
22		PUSH {lr}
23		SUB sp, sp, #4
24		LDR r4, =1
25		STR r4, [sp]
26		LDR r4, =msg_0
27		MOV r0, r4
28		BL p_print_string
29		BL p_print_ln
30		B L0
31	L1:
32		LDR r4, [sp]
33		MOV r0, r4
34		BL p_print_int
35		BL p_print_ln
36		LDR r4, [sp]
37		LDR r5, =1
38		ADDS r4, r4, r5
39		BLVS p_throw_overflow_error
40		STR r4, [sp]
41	L0:
42		LDR r4, [sp]
43		LDR r5, =10
44		CMP r4, r5
45		MOVLE r4, #1
46		MOVGT r4, #0
47		CMP r4, #1
48		BEQ L1
49		ADD sp, sp, #4
50		LDR r0, =0
51		POP {pc}
52		.ltorg
53	p_print_string:
54		PUSH {lr}
55		LDR r1, [r0]
56		ADD r2, r0, #4
57		LDR r0, =msg_1
58		ADD r0, r0, #4
59		BL printf
60		MOV r0, #0
61		BL fflush
62		POP {pc}
63	p_print_ln:
64		PUSH {lr}
65		LDR r0, =msg_2
66		ADD r0, r0, #4
67		BL puts
68		MOV r0, #0
69		BL fflush
70		POP {pc}
71	p_print_int:
72		PUSH {lr}
73		MOV r1, r0
74		LDR r0, =msg_3
75		ADD r0, r0, #4
76		BL printf
77		MOV r0, #0
78		BL fflush
79		POP {pc}
80	p_throw_overflow_error:
81		LDR r0, =msg_4
82		BL p_throw_runtime_error
83	p_throw_runtime_error:
84		BL p_print_string
85		MOV r0, #-1
86		BL exit
87	
===========================================================
-- Assembling and Linking...
-- Executing...
===========================================================
Can you count to 10?
1
2
3
4
5
6
7
8
9
10
===========================================================
The exit code is 0.
-- Finished
