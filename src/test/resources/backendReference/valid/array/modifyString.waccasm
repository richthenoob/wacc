# create and modify string as array of characters

# Output:
# hello world!
# Hello world!
# Hi!

# Program:

begin
  char[] str = ['h','e','l','l','o',' ','w','o','r','l','d','!'] ;
  println str ;
  str[0] = 'H' ;
  println str ;
  str = ['H','i','!'] ;
  println str
end

-- Compiling...
-- Printing Assembly...
modifyString.s contents are:
===========================================================
0	.data
1	
2	msg_0:
3		.word 5
4		.ascii	"%.*s\0"
5	msg_1:
6		.word 1
7		.ascii	"\0"
8	msg_2:
9		.word 44
10		.ascii	"ArrayIndexOutOfBoundsError: negative index\n\0"
11	msg_3:
12		.word 45
13		.ascii	"ArrayIndexOutOfBoundsError: index too large\n\0"
14	
15	.text
16	
17	.global main
18	main:
19		PUSH {lr}
20		SUB sp, sp, #4
21		LDR r0, =16
22		BL malloc
23		MOV r4, r0
24		MOV r5, #'h'
25		STRB r5, [r4, #4]
26		MOV r5, #'e'
27		STRB r5, [r4, #5]
28		MOV r5, #'l'
29		STRB r5, [r4, #6]
30		MOV r5, #'l'
31		STRB r5, [r4, #7]
32		MOV r5, #'o'
33		STRB r5, [r4, #8]
34		MOV r5, #' '
35		STRB r5, [r4, #9]
36		MOV r5, #'w'
37		STRB r5, [r4, #10]
38		MOV r5, #'o'
39		STRB r5, [r4, #11]
40		MOV r5, #'r'
41		STRB r5, [r4, #12]
42		MOV r5, #'l'
43		STRB r5, [r4, #13]
44		MOV r5, #'d'
45		STRB r5, [r4, #14]
46		MOV r5, #'!'
47		STRB r5, [r4, #15]
48		LDR r5, =12
49		STR r5, [r4]
50		STR r4, [sp]
51		LDR r4, [sp]
52		MOV r0, r4
53		BL p_print_string
54		BL p_print_ln
55		MOV r4, #'H'
56		ADD r5, sp, #0
57		LDR r6, =0
58		LDR r5, [r5]
59		MOV r0, r6
60		MOV r1, r5
61		BL p_check_array_bounds
62		ADD r5, r5, #4
63		ADD r5, r5, r6
64		STRB r4, [r5]
65		LDR r4, [sp]
66		MOV r0, r4
67		BL p_print_string
68		BL p_print_ln
69		LDR r0, =7
70		BL malloc
71		MOV r4, r0
72		MOV r6, #'H'
73		STRB r6, [r4, #4]
74		MOV r6, #'i'
75		STRB r6, [r4, #5]
76		MOV r6, #'!'
77		STRB r6, [r4, #6]
78		LDR r6, =3
79		STR r6, [r4]
80		STR r4, [sp]
81		LDR r4, [sp]
82		MOV r0, r4
83		BL p_print_string
84		BL p_print_ln
85		ADD sp, sp, #4
86		LDR r0, =0
87		POP {pc}
88		.ltorg
89	p_print_string:
90		PUSH {lr}
91		LDR r1, [r0]
92		ADD r2, r0, #4
93		LDR r0, =msg_0
94		ADD r0, r0, #4
95		BL printf
96		MOV r0, #0
97		BL fflush
98		POP {pc}
99	p_print_ln:
100		PUSH {lr}
101		LDR r0, =msg_1
102		ADD r0, r0, #4
103		BL puts
104		MOV r0, #0
105		BL fflush
106		POP {pc}
107	p_check_array_bounds:
108		PUSH {lr}
109		CMP r0, #0
110		LDRLT r0, =msg_2
111		BLLT p_throw_runtime_error
112		LDR r1, [r1]
113		CMP r0, r1
114		LDRCS r0, =msg_3
115		BLCS p_throw_runtime_error
116		POP {pc}
117	p_throw_runtime_error:
118		BL p_print_string
119		MOV r0, #-1
120		BL exit
121	
===========================================================
-- Assembling and Linking...
-- Executing...
===========================================================
hello world!
Hello world!
Hi!
===========================================================
The exit code is 0.
-- Finished
