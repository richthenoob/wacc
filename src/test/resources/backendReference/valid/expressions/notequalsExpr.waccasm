# evaluating inequality

# Output:
# true
# true
# false

# Program:

begin
  int x = 2 ;
  int y = 4 ;
  int z = 4 ;
  bool b = x != y ;
  println b ;
  println x != y ;
  println y != z
end

-- Compiling...
-- Printing Assembly...
notequalsExpr.s contents are:
===========================================================
0	.data
1	
2	msg_0:
3		.word 5
4		.ascii	"true\0"
5	msg_1:
6		.word 6
7		.ascii	"false\0"
8	msg_2:
9		.word 1
10		.ascii	"\0"
11	
12	.text
13	
14	.global main
15	main:
16		PUSH {lr}
17		SUB sp, sp, #13
18		LDR r4, =2
19		STR r4, [sp, #9]
20		LDR r4, =4
21		STR r4, [sp, #5]
22		LDR r4, =4
23		STR r4, [sp, #1]
24		LDR r4, [sp, #9]
25		LDR r5, [sp, #5]
26		CMP r4, r5
27		MOVNE r4, #1
28		MOVEQ r4, #0
29		STRB r4, [sp]
30		LDRSB r4, [sp]
31		MOV r0, r4
32		BL p_print_bool
33		BL p_print_ln
34		LDR r4, [sp, #9]
35		LDR r5, [sp, #5]
36		CMP r4, r5
37		MOVNE r4, #1
38		MOVEQ r4, #0
39		MOV r0, r4
40		BL p_print_bool
41		BL p_print_ln
42		LDR r4, [sp, #5]
43		LDR r5, [sp, #1]
44		CMP r4, r5
45		MOVNE r4, #1
46		MOVEQ r4, #0
47		MOV r0, r4
48		BL p_print_bool
49		BL p_print_ln
50		ADD sp, sp, #13
51		LDR r0, =0
52		POP {pc}
53		.ltorg
54	p_print_bool:
55		PUSH {lr}
56		CMP r0, #0
57		LDRNE r0, =msg_0
58		LDREQ r0, =msg_1
59		ADD r0, r0, #4
60		BL printf
61		MOV r0, #0
62		BL fflush
63		POP {pc}
64	p_print_ln:
65		PUSH {lr}
66		LDR r0, =msg_2
67		ADD r0, r0, #4
68		BL puts
69		MOV r0, #0
70		BL fflush
71		POP {pc}
72	
===========================================================
-- Assembling and Linking...
-- Executing...
===========================================================
true
true
false
===========================================================
The exit code is 0.
-- Finished
