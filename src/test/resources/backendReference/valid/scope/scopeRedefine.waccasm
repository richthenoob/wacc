# more complex variable scoping test that redefines a variable

# Output:
# true
# 2

# Program:

begin
  int x = 1 ;
  begin
    x = 2 ;
    bool x = true ;
    println x
  end ;
  println x 
end


-- Compiling...
-- Printing Assembly...
scopeRedefine.s contents are:
===========================================================
0	.data
1	
2	msg_0:
3		.word 5
4		.ascii	"true\0"
5	msg_1:
6		.word 6
7		.ascii	"false\0"
8	msg_2:
9		.word 1
10		.ascii	"\0"
11	msg_3:
12		.word 3
13		.ascii	"%d\0"
14	
15	.text
16	
17	.global main
18	main:
19		PUSH {lr}
20		SUB sp, sp, #4
21		LDR r4, =1
22		STR r4, [sp]
23		SUB sp, sp, #1
24		LDR r4, =2
25		STR r4, [sp, #1]
26		MOV r4, #1
27		STRB r4, [sp]
28		LDRSB r4, [sp]
29		MOV r0, r4
30		BL p_print_bool
31		BL p_print_ln
32		ADD sp, sp, #1
33		LDR r4, [sp]
34		MOV r0, r4
35		BL p_print_int
36		BL p_print_ln
37		ADD sp, sp, #4
38		LDR r0, =0
39		POP {pc}
40		.ltorg
41	p_print_bool:
42		PUSH {lr}
43		CMP r0, #0
44		LDRNE r0, =msg_0
45		LDREQ r0, =msg_1
46		ADD r0, r0, #4
47		BL printf
48		MOV r0, #0
49		BL fflush
50		POP {pc}
51	p_print_ln:
52		PUSH {lr}
53		LDR r0, =msg_2
54		ADD r0, r0, #4
55		BL puts
56		MOV r0, #0
57		BL fflush
58		POP {pc}
59	p_print_int:
60		PUSH {lr}
61		MOV r1, r0
62		LDR r0, =msg_3
63		ADD r0, r0, #4
64		BL printf
65		MOV r0, #0
66		BL fflush
67		POP {pc}
68	
===========================================================
-- Assembling and Linking...
-- Executing...
===========================================================
true
2
===========================================================
The exit code is 0.
-- Finished
