# multiple string assignments and comparisons

# Output:
# s1 is Hi
# s2 is Hello
# They are not the same string.
# Now make s1 = s2
# s1 is Hello
# s2 is Hello
# They are the same string.

# Program:

begin
  string s1 = "Hi" ;
  string s2 = "Hello" ;
  print "s1 is " ;
  println s1 ;
  print "s2 is " ;
  println s2 ;
  if s1 == s2 then
    println "They are the same string." 
  else 
    println "They are not the same string."
  fi ;

  println "Now make s1 = s2" ;
  s1 = s2 ;

  print "s1 is " ;
  println s1 ;
  print "s2 is " ;
  println s2 ;
  if s1 == s2 then
    println "They are the same string." 
  else 
    println "They are not the same string."
  fi
end

-- Compiling...
-- Printing Assembly...
multipleStringsAssignment.s contents are:
===========================================================
0	.data
1	
2	msg_0:
3		.word 2
4		.ascii	"Hi"
5	msg_1:
6		.word 5
7		.ascii	"Hello"
8	msg_2:
9		.word 6
10		.ascii	"s1 is "
11	msg_3:
12		.word 6
13		.ascii	"s2 is "
14	msg_4:
15		.word 25
16		.ascii	"They are the same string."
17	msg_5:
18		.word 29
19		.ascii	"They are not the same string."
20	msg_6:
21		.word 16
22		.ascii	"Now make s1 = s2"
23	msg_7:
24		.word 6
25		.ascii	"s1 is "
26	msg_8:
27		.word 6
28		.ascii	"s2 is "
29	msg_9:
30		.word 25
31		.ascii	"They are the same string."
32	msg_10:
33		.word 29
34		.ascii	"They are not the same string."
35	msg_11:
36		.word 5
37		.ascii	"%.*s\0"
38	msg_12:
39		.word 1
40		.ascii	"\0"
41	
42	.text
43	
44	.global main
45	main:
46		PUSH {lr}
47		SUB sp, sp, #8
48		LDR r4, =msg_0
49		STR r4, [sp, #4]
50		LDR r4, =msg_1
51		STR r4, [sp]
52		LDR r4, =msg_2
53		MOV r0, r4
54		BL p_print_string
55		LDR r4, [sp, #4]
56		MOV r0, r4
57		BL p_print_string
58		BL p_print_ln
59		LDR r4, =msg_3
60		MOV r0, r4
61		BL p_print_string
62		LDR r4, [sp]
63		MOV r0, r4
64		BL p_print_string
65		BL p_print_ln
66		LDR r4, [sp, #4]
67		LDR r5, [sp]
68		CMP r4, r5
69		MOVEQ r4, #1
70		MOVNE r4, #0
71		CMP r4, #0
72		BEQ L0
73		LDR r4, =msg_4
74		MOV r0, r4
75		BL p_print_string
76		BL p_print_ln
77		B L1
78	L0:
79		LDR r4, =msg_5
80		MOV r0, r4
81		BL p_print_string
82		BL p_print_ln
83	L1:
84		LDR r4, =msg_6
85		MOV r0, r4
86		BL p_print_string
87		BL p_print_ln
88		LDR r4, [sp]
89		STR r4, [sp, #4]
90		LDR r4, =msg_7
91		MOV r0, r4
92		BL p_print_string
93		LDR r4, [sp, #4]
94		MOV r0, r4
95		BL p_print_string
96		BL p_print_ln
97		LDR r4, =msg_8
98		MOV r0, r4
99		BL p_print_string
100		LDR r4, [sp]
101		MOV r0, r4
102		BL p_print_string
103		BL p_print_ln
104		LDR r4, [sp, #4]
105		LDR r5, [sp]
106		CMP r4, r5
107		MOVEQ r4, #1
108		MOVNE r4, #0
109		CMP r4, #0
110		BEQ L2
111		LDR r4, =msg_9
112		MOV r0, r4
113		BL p_print_string
114		BL p_print_ln
115		B L3
116	L2:
117		LDR r4, =msg_10
118		MOV r0, r4
119		BL p_print_string
120		BL p_print_ln
121	L3:
122		ADD sp, sp, #8
123		LDR r0, =0
124		POP {pc}
125		.ltorg
126	p_print_string:
127		PUSH {lr}
128		LDR r1, [r0]
129		ADD r2, r0, #4
130		LDR r0, =msg_11
131		ADD r0, r0, #4
132		BL printf
133		MOV r0, #0
134		BL fflush
135		POP {pc}
136	p_print_ln:
137		PUSH {lr}
138		LDR r0, =msg_12
139		ADD r0, r0, #4
140		BL puts
141		MOV r0, #0
142		BL fflush
143		POP {pc}
144	
===========================================================
-- Assembling and Linking...
-- Executing...
===========================================================
s1 is Hi
s2 is Hello
They are not the same string.
Now make s1 = s2
s1 is Hello
s2 is Hello
They are the same string.
===========================================================
The exit code is 0.
-- Finished
