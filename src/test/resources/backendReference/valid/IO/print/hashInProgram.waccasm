# In-line comments and printing #

# Output:
# We can print the hash character: #
# We can also print # when its in a string.

# Program:

begin 
  int x = 0 ; # comments can be in-line
  print "We can print the hash character: " ;
  println '#' ;
  println "We can also print # when its in a string."
end

-- Compiling...
-- Printing Assembly...
hashInProgram.s contents are:
===========================================================
0	.data
1	
2	msg_0:
3		.word 33
4		.ascii	"We can print the hash character: "
5	msg_1:
6		.word 41
7		.ascii	"We can also print # when its in a string."
8	msg_2:
9		.word 5
10		.ascii	"%.*s\0"
11	msg_3:
12		.word 1
13		.ascii	"\0"
14	
15	.text
16	
17	.global main
18	main:
19		PUSH {lr}
20		SUB sp, sp, #4
21		LDR r4, =0
22		STR r4, [sp]
23		LDR r4, =msg_0
24		MOV r0, r4
25		BL p_print_string
26		MOV r4, #'#'
27		MOV r0, r4
28		BL putchar
29		BL p_print_ln
30		LDR r4, =msg_1
31		MOV r0, r4
32		BL p_print_string
33		BL p_print_ln
34		ADD sp, sp, #4
35		LDR r0, =0
36		POP {pc}
37		.ltorg
38	p_print_string:
39		PUSH {lr}
40		LDR r1, [r0]
41		ADD r2, r0, #4
42		LDR r0, =msg_2
43		ADD r0, r0, #4
44		BL printf
45		MOV r0, #0
46		BL fflush
47		POP {pc}
48	p_print_ln:
49		PUSH {lr}
50		LDR r0, =msg_3
51		ADD r0, r0, #4
52		BL puts
53		MOV r0, #0
54		BL fflush
55		POP {pc}
56	
===========================================================
-- Assembling and Linking...
-- Executing...
===========================================================
We can print the hash character: #
We can also print # when its in a string.
===========================================================
The exit code is 0.
-- Finished
